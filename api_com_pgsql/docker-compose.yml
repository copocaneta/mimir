version: '3'

services:
  nginx:
    image: nginx:1.15-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - flask_app
    networks:
      - my-network
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  flask_app:
    container_name: flask_app
    restart: always
    image: flask/flask_docker_mimir_pgsql
    ports:
      - '8000:8000'
    #     env_file:
    #       - ./api/.env
    command: gunicorn -c gunicorn_config.py run:app
    depends_on:
      - db
    volumes:
      - static_volume:/home/app/static/
    networks:
      - my-network
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - my-network

volumes:
  postgres_data_prod:
  static_volume:

networks:
  my-network:
